From a060c15ef87e0f0e72974c7c0e57fe811bbd06a2 Mon Sep 17 00:00:00 2001
From: "A. Jesse Jiryu Davis" <jesse@10gen.com>
Date: Fri, 31 May 2013 10:17:46 -0400
Subject: [PATCH] Fix null pointer when decoding invalid DBRef PYTHON-532

---
 bson/__init__.py        |  2 +-
 bson/_cbsonmodule.c     | 10 ++++++++--
 test/test_collection.py | 26 ++++++++++++++++++++++++++
 3 files changed, 35 insertions(+), 3 deletions(-)

Index: pymongo-2.1/bson/__init__.py
===================================================================
--- pymongo-2.1.orig/bson/__init__.py	2013-06-21 11:30:52.810393494 -0400
+++ pymongo-2.1/bson/__init__.py	2013-06-21 11:30:52.798393493 -0400
@@ -117,7 +117,7 @@
     object = _elements_to_dict(encoded, as_class, tz_aware)
     position += obj_size
     if "$ref" in object:
-        return (DBRef(object.pop("$ref"), object.pop("$id"),
+        return (DBRef(object.pop("$ref"), object.pop("$id", None),
                       object.pop("$db", None), object), position)
     return object, position
 
Index: pymongo-2.1/bson/_cbsonmodule.c
===================================================================
--- pymongo-2.1.orig/bson/_cbsonmodule.c	2013-06-21 11:30:52.810393494 -0400
+++ pymongo-2.1/bson/_cbsonmodule.c	2013-06-21 11:30:52.802393493 -0400
@@ -923,8 +923,14 @@
 
                 Py_INCREF(collection);
                 PyDict_DelItemString(value, "$ref");
-                Py_INCREF(id);
-                PyDict_DelItemString(value, "$id");
+
+                if (id == NULL) {
+                    id = Py_None;
+                    Py_INCREF(id);
+                } else {
+                    Py_INCREF(id);
+                    PyDict_DelItemString(value, "$id");
+                }
 
                 if (database == NULL) {
                     database = Py_None;
Index: pymongo-2.1/test/test_collection.py
===================================================================
--- pymongo-2.1.orig/test/test_collection.py	2013-06-21 11:30:52.810393494 -0400
+++ pymongo-2.1/test/test_collection.py	2013-06-21 11:30:52.802393493 -0400
@@ -30,6 +30,7 @@
 
 from bson.binary import Binary, UUIDLegacy, OLD_UUID_SUBTYPE, UUID_SUBTYPE
 from bson.code import Code
+from bson.dbref import DBRef
 from bson.objectid import ObjectId
 from bson.son import SON
 from pymongo import ASCENDING, DESCENDING, GEO2D, GEOHAYSTACK
@@ -1495,6 +1496,31 @@
         self.assertRaises(InvalidDocument, c.save, {"x": c})
         warnings.simplefilter("default")
 
+    def test_bad_dbref(self):
+        c = self.db.test
+        c.drop()
+
+        # Incomplete DBRefs.
+        self.assertRaises(
+            InvalidDocument,
+            c.insert, {'ref': {'$ref': 'collection'}})
+
+        self.assertRaises(
+            InvalidDocument,
+            c.insert, {'ref': {'$id': ObjectId()}})
+
+        ref_only = {'ref': {'$ref': 'collection'}}
+        id_only = {'ref': {'$id': ObjectId()}}
+
+        # Force insert of ref without $id.
+        c.insert(ref_only, check_keys=False)
+        self.assertEqual(DBRef('collection', id=None), c.find_one()['ref'])
+        c.drop()
+
+        # DBRef without $ref is decoded as normal subdocument.
+        c.insert(id_only, check_keys=False)
+        self.assertEqual(id_only, c.find_one())
+
     def test_as_class(self):
         c = self.db.test
         c.drop()
